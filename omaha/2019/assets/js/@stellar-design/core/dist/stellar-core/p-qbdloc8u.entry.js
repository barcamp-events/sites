import{r as t,g as e}from"./p-8388b2f5.js";import{a as i}from"./p-7a6a8a00.js";const n=function(t,e){!1!==e.midicontroller?r(t,e):"mouse"===e.responds?a(t,e):t.frequency.value=e.value},s=function(t){var e,i,n;return null==(t=t||window.event).pageX&&null!=t.clientX&&(n=(e=t.target&&t.target.ownerDocument||document).body,t.pageX=t.clientX+((i=e.documentElement)&&i.scrollLeft||n&&n.scrollLeft||0)-(i&&i.clientLeft||n&&n.clientLeft||0),t.pageY=t.clientY+(i&&i.scrollTop||n&&n.scrollTop||0)-(i&&i.clientTop||n&&n.clientTop||0)),{toTop:t.pageY,toRight:window.innerWidth-t.pageX,toBottom:window.innerHeight-t.pageY,toLeft:t.pageX}},o=function(){if(window.mousePos){var t=new CustomEvent("mouse-update",{detail:window.mousePos});document.dispatchEvent(t)}},r=function(t,e){document.addEventListener("midi-controller-update",i=>{e.midicontroller===i.detail.controller.number&&(t.frequency.value=(i.detail.value+1)/128*3e3)})},a=function(t,e){document.addEventListener("mouse-update",i=>{"x"===e.axis?t.frequency.value=1.5*i.detail.toLeft||1e3:"x-reverse"===e.axis?t.frequency.value=1.5*i.detail.toRight||1e3:"y"===e.axis?t.frequency.value=1.5*i.detail.toTop||1e3:"y-reverse"===e.axis?t.frequency.value=1.5*i.detail.toBottom||1e3:"bi"===e.axis?t.frequency.value=i.detail.toRight+i.detail.toTop||1e3:"bi-reverse"===e.axis&&(t.frequency.value=i.detail.toLeft+i.detail.toRight||1e3)},!1),window.mouseInitialized||(window.mouseInitialized=!0,document.onmousemove=s,setInterval(o,100))},u=class{constructor(e){t(this,e),this.method="lowshelf",this.value=1,this.responds=null,this.midicontroller=0,this.axis="x"}async attachEffect(t,e){this.context=t,this.source=e;const s=await e.webAudio();return this._use=s.querySelector(`web-audio-source[name=${this.use}]`),i(this.type,`"${this.type}" is not a valid effect - Routing around to masterGain."`)&&("panner"===this.type||"listener"===this.type||("reverb"===this.type?this.effect=await async function(t,e){const i=t.createConvolver();var n=e._use;const s=await n.getBuffer();return s&&(i.buffer=s),i}(this.context,this):"filter"===this.type?this.effect=function(t,e){const i=t.createBiquadFilter();return i.type=e.method,i.gain.value=1,n(i,e),i}(this.context,this):"delay"===this.type&&(this.effect=function(t,e){const i=t.createDelay(5);return i.delayTime.value=3,n(i,e),i}(this.context,this)))),this.effect}effects(){return["panner","listener","reverb","delay","compression","distortion","filter"]}get element(){return e(this)}};export{u as web_audio_effect};