/* =========================================================================
   Grid
   ========================================================================= */

// 12 column stuff
// Creates a grid that looks and works like Bootstrap's

%col {
  width: 100%;
  min-width: 0;
  min-height: 1px;
}

@mixin make-columns($prefix) {
  @for $i from 1 through 12 {
    .col#{$prefix}-#{$i} {
      flex: 0 0 (math.div(100%, 12) * $i);
      max-width: (math.div(100%, 12) * $i);
    }

    .offset#{$prefix}-#{$i} {
      margin-left: (math.div(100%, 12) * $i);
    }

    .pull#{$prefix}-#{$i} {
      margin-right: (math.div(-100%, 12) * $i);
    }
  }

  .col#{$prefix}-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }

  .ml#{$prefix}-auto {
    margin-left: auto;
  }

  .mr#{$prefix}-auto {
    margin-right: auto;
  }
}

@mixin make-rows($suffix) {
  .row {
    &--gutters-1#{$suffix} {
      margin-right: -(space(1));
      margin-left: -(space(1));
    }

    &--gutters-2#{$suffix} {
      margin-right: -(space(2));
      margin-left: -(space(2));
    }

    &--gutters-3#{$suffix} {
      margin-right: -(space(3));
      margin-left: -(space(3));
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
}

.col {
  @extend %col;
  flex: 0 1 auto;
}

// $sizes is defined in _abstractions/_variables.scss
@each $size, $value in $sizes {
  @include make-responsive-classes($value) {
    @include make-columns($size);
    @include make-rows($size);
  }

  // @extend can't go inside a media query, so it has to go out here
  .col#{$size}-auto {
    @extend %col;
  }

  @for $i from 1 through 12 {
    .col#{$size}-#{$i} {
      @extend %col;
    }
  }
}
