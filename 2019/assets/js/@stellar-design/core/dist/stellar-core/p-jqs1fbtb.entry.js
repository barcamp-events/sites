import{r as t,h as s,g as e,f as o}from"./p-ca3a3989.js";import"./p-20de5b5b.js";import{m as i,a as n,s as a,b as r,c as h,d as c,h as l,e as u,f as p,g as d,l as f}from"./p-7021fe2a.js";import{s as g,a as y,b as m,g as b,c as w,d as P}from"./p-9be3ef6c.js";import{A as v}from"./p-21f353be.js";const O=class{constructor(s){t(this,s),this.group=null,this.match=null,this.componentProps={},this.exact=!1,this.scrollOnNextRender=!1,this.previousMatch=null}computeMatch(t){const s=null!=this.group||null!=this.el.parentElement&&"stencil-route-switch"===this.el.parentElement.tagName.toLowerCase();if(t&&!s)return this.previousMatch=this.match,this.match=i(t.pathname,{path:this.url,exact:this.exact,strict:!0})}async loadCompleted(){let t={};this.history&&this.history.location.hash?t={scrollToId:this.history.location.hash.substr(1)}:this.scrollTopOffset&&(t={scrollTopOffset:this.scrollTopOffset}),"function"==typeof this.componentUpdated?this.componentUpdated(t):this.match&&!n(this.match,this.previousMatch)&&this.routeViewsUpdated&&this.routeViewsUpdated(t)}async componentDidUpdate(){await this.loadCompleted()}async componentDidLoad(){await this.loadCompleted()}render(){if(!this.match||!this.history)return null;const t=Object.assign({},this.componentProps,{history:this.history,match:this.match});return this.routeRender?this.routeRender(Object.assign({},t,{component:this.component})):this.component?s(this.component,Object.assign({},t)):void 0}get el(){return e(this)}static get watchers(){return{location:["computeMatch"]}}static get style(){return"stencil-route.inactive{display:none}"}};v.injectProps(O,["location","history","historyType","routeViewsUpdated"]);const L=t=>"STENCIL-ROUTE"===t.tagName,j=class{constructor(s){t(this,s),this.group=(()=>((1e17*Math.random()).toString().match(/.{4}/g)||[]).join("-"))(),this.subscribers=[],this.queue=o(this,"queue")}componentWillLoad(){null!=this.location&&this.regenerateSubscribers(this.location)}async regenerateSubscribers(t){if(null==t)return;let s=-1;if(this.subscribers=Array.prototype.slice.call(this.el.children).filter(L).map((e,o)=>{const n=((t,s,e)=>i(t,{path:s,exact:e,strict:!0}))(t.pathname,e.url,e.exact);return n&&-1===s&&(s=o),{el:e,match:n}}),-1===s)return;if(this.activeIndex===s)return void(this.subscribers[s].el.match=this.subscribers[s].match);this.activeIndex=s;const e=this.subscribers[this.activeIndex];this.scrollTopOffset&&(e.el.scrollTopOffset=this.scrollTopOffset),e.el.group=this.group,e.el.match=e.match,e.el.componentUpdated=t=>{this.queue.write(()=>{this.subscribers.forEach((t,s)=>{if(t.el.componentUpdated=void 0,s===this.activeIndex)return t.el.style.display="";this.scrollTopOffset&&(t.el.scrollTopOffset=this.scrollTopOffset),t.el.group=this.group,t.el.match=null,t.el.style.display="none"})}),this.routeViewsUpdated&&this.routeViewsUpdated(Object.assign({scrollTopOffset:this.scrollTopOffset},t))}}render(){return s("slot",null)}get el(){return e(this)}static get watchers(){return{location:["regenerateSubscribers"]}}};v.injectProps(j,["location","routeViewsUpdated"]);const E=(t,...s)=>{t||console.warn(...s)},T=()=>{let t,s=[];return{setPrompt:s=>(E(null==t,"A history supports only one prompt at a time"),t=s,()=>{t===s&&(t=null)}),confirmTransitionTo:(s,e,o,i)=>{if(null!=t){const n="function"==typeof t?t(s,e):t;"string"==typeof n?"function"==typeof o?o(n,i):(E(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),i(!0)):i(!1!==n)}else i(!0)},appendListener:t=>{let e=!0;const o=(...s)=>{e&&t(...s)};return s.push(o),()=>{e=!1,s=s.filter(t=>t!==o)}},notifyListeners:(...t)=>{s.forEach(s=>s(...t))}}},S=(t,s="scrollPositions")=>{let e=new Map;const o=(s,o)=>{if(e.set(s,o),g(t,"sessionStorage")){const s=[];e.forEach((t,e)=>{s.push([e,t])}),t.sessionStorage.setItem("scrollPositions",JSON.stringify(s))}};if(g(t,"sessionStorage")){const o=t.sessionStorage.getItem(s);e=o?new Map(JSON.parse(o)):e}return"scrollRestoration"in t.history&&(history.scrollRestoration="manual"),{set:o,get:t=>e.get(t),has:t=>e.has(t),capture:s=>{o(s,[t.scrollX,t.scrollY])}}},H={hashbang:{encodePath:t=>"!"===t.charAt(0)?t:"!/"+d(t),decodePath:t=>"!"===t.charAt(0)?t.substr(1):t},noslash:{encodePath:d,decodePath:r},slash:{encodePath:r,decodePath:r}},U=(t,s)=>{const e=0==t.pathname.indexOf(s)?"/"+t.pathname.slice(s.length):t.pathname;return Object.assign({},t,{pathname:e})},k={browser:(t,s={})=>{let e=!1;const o=t.history,i=t.location,n=t.navigator,d=y(t),f=!m(n),g=S(t),P=null!=s.forceRefresh&&s.forceRefresh,v=null!=s.getUserConfirmation?s.getUserConfirmation:b,O=null!=s.keyLength?s.keyLength:6,L=s.basename?a(r(s.basename)):"",j=()=>{try{return t.history.state||{}}catch(t){return{}}},H=t=>{t=t||{};const{key:s,state:e}=t,{pathname:o,search:n,hash:a}=i;let r=o+n+a;return E(!L||l(r,L),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+r+'" to begin with "'+L+'".'),L&&(r=u(r,L)),h(r,e,s||c(O))},U=T(),k=t=>{g.capture(q.location.key),Object.assign(q,t),q.location.scrollPosition=g.get(q.location.key),q.length=o.length,U.notifyListeners(q.location,q.action)},A=t=>{w(n,t)||R(H(t.state))},C=()=>{R(H(j()))},R=t=>{if(e)e=!1,k();else{const s="POP";U.confirmTransitionTo(t,s,v,e=>{e?k({action:s,location:t}):M(t)})}},M=t=>{let s=_.indexOf(q.location.key),o=_.indexOf(t.key);-1===s&&(s=0),-1===o&&(o=0);const i=s-o;i&&(e=!0,N(i))},x=H(j());let _=[x.key],Y=0,B=!1;const D=t=>L+p(t),N=t=>{o.go(t)},V=s=>{1===(Y+=s)?(t.addEventListener("popstate",A),f&&t.addEventListener("hashchange",C)):0===Y&&(t.removeEventListener("popstate",A),f&&t.removeEventListener("hashchange",C))},q={length:o.length,action:"POP",location:x,createHref:D,push:(t,s)=>{E(!("object"==typeof t&&void 0!==t.state&&void 0!==s),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");const e=h(t,s,c(O),q.location);U.confirmTransitionTo(e,"PUSH",v,t=>{if(!t)return;const s=D(e),{key:n,state:a}=e;if(d)if(o.pushState({key:n,state:a},"",s),P)i.href=s;else{const t=_.indexOf(q.location.key),s=_.slice(0,-1===t?0:t+1);s.push(e.key),_=s,k({action:"PUSH",location:e})}else E(void 0===a,"Browser history cannot push state in browsers that do not support HTML5 history"),i.href=s})},replace:(t,s)=>{E(!("object"==typeof t&&void 0!==t.state&&void 0!==s),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");const e=h(t,s,c(O),q.location);U.confirmTransitionTo(e,"REPLACE",v,t=>{if(!t)return;const s=D(e),{key:n,state:a}=e;if(d)if(o.replaceState({key:n,state:a},"",s),P)i.replace(s);else{const t=_.indexOf(q.location.key);-1!==t&&(_[t]=e.key),k({action:"REPLACE",location:e})}else E(void 0===a,"Browser history cannot replace state in browsers that do not support HTML5 history"),i.replace(s)})},go:N,goBack:()=>N(-1),goForward:()=>N(1),block:(t="")=>{const s=U.setPrompt(t);return B||(V(1),B=!0),()=>(B&&(B=!1,V(-1)),s())},listen:t=>{const s=U.appendListener(t);return V(1),()=>{V(-1),s()}},win:t};return q},hash:(t,s={})=>{let e=!1,o=null,i=0,n=!1;const d=t.location,g=t.history,y=P(t.navigator),m=null!=s.keyLength?s.keyLength:6,{getUserConfirmation:w=b,hashType:v="slash"}=s,O=s.basename?a(r(s.basename)):"",{encodePath:L,decodePath:j}=H[v],S=()=>{const t=d.href,s=t.indexOf("#");return-1===s?"":t.substring(s+1)},U=t=>{const s=d.href.indexOf("#");d.replace(d.href.slice(0,s>=0?s:0)+"#"+t)},k=()=>{let t=j(S());return E(!O||l(t,O),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+t+'" to begin with "'+O+'".'),O&&(t=u(t,O)),h(t,void 0,c(m))},A=T(),C=t=>{Object.assign(q,t),q.length=g.length,A.notifyListeners(q.location,q.action)},R=()=>{const t=S(),s=L(t);if(t!==s)U(s);else{const t=k(),s=q.location;if(!e&&f(s,t))return;if(o===p(t))return;o=null,M(t)}},M=t=>{if(e)e=!1,C();else{const s="POP";A.confirmTransitionTo(t,s,w,e=>{e?C({action:s,location:t}):x(t)})}},x=t=>{let s=D.lastIndexOf(p(q.location)),o=D.lastIndexOf(p(t));-1===s&&(s=0),-1===o&&(o=0);const i=s-o;i&&(e=!0,N(i))},_=S(),Y=L(_);_!==Y&&U(Y);const B=k();let D=[p(B)];const N=t=>{E(y,"Hash history go(n) causes a full page reload in this browser"),g.go(t)},V=(t,s)=>{1===(i+=s)?t.addEventListener("hashchange",R):0===i&&t.removeEventListener("hashchange",R)},q={length:g.length,action:"POP",location:B,createHref:t=>"#"+L(O+p(t)),push:(t,s)=>{E(void 0===s,"Hash history cannot push state; it is ignored");const e=h(t,void 0,c(m),q.location);A.confirmTransitionTo(e,"PUSH",w,t=>{if(!t)return;const s=p(e),i=L(O+s);if(S()!==i){o=s,(t=>d.hash=t)(i);const t=D.lastIndexOf(p(q.location)),n=D.slice(0,-1===t?0:t+1);n.push(s),D=n,C({action:"PUSH",location:e})}else E(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),C()})},replace:(t,s)=>{E(void 0===s,"Hash history cannot replace state; it is ignored");const e=h(t,void 0,c(m),q.location);A.confirmTransitionTo(e,"REPLACE",w,t=>{if(!t)return;const s=p(e),i=L(O+s);S()!==i&&(o=s,U(i));const n=D.indexOf(p(q.location));-1!==n&&(D[n]=s),C({action:"REPLACE",location:e})})},go:N,goBack:()=>N(-1),goForward:()=>N(1),block:(s="")=>{const e=A.setPrompt(s);return n||(V(t,1),n=!0),()=>(n&&(n=!1,V(t,-1)),e())},listen:s=>{const e=A.appendListener(s);return V(t,1),()=>{V(t,-1),e()}},win:t};return q}},A=class{constructor(s){t(this,s),this.root="/",this.historyType="browser",this.titleSuffix="",this.routeViewsUpdated=(t={})=>{if(this.history&&t.scrollToId&&"browser"===this.historyType){const s=this.history.win.document.getElementById(t.scrollToId);if(s)return s.scrollIntoView()}this.scrollTo(t.scrollTopOffset||this.scrollTopOffset)},this.isServer=o(this,"isServer"),this.queue=o(this,"queue")}componentWillLoad(){this.history=k[this.historyType](this.el.ownerDocument.defaultView),this.history.listen(t=>{t=U(t,this.root),this.location=t}),this.location=U(this.history.location,this.root)}scrollTo(t){const s=this.history;if(null!=t&&!this.isServer&&s)return"POP"===s.action&&Array.isArray(s.location.scrollPosition)?this.queue.write(()=>{s&&s.location&&Array.isArray(s.location.scrollPosition)&&s.win.scrollTo(s.location.scrollPosition[0],s.location.scrollPosition[1])}):this.queue.write(()=>{s.win.scrollTo(0,t)})}render(){if(this.location&&this.history)return s(v.Provider,{state:{historyType:this.historyType,location:this.location,titleSuffix:this.titleSuffix,root:this.root,history:this.history,routeViewsUpdated:this.routeViewsUpdated}},s("slot",null))}get el(){return e(this)}};export{O as stencil_route,j as stencil_route_switch,A as stencil_router};